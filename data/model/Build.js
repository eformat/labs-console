/**
 * Red Hat Open Innovation Labs Console API
 * Specification for interaction between the Labs Console front-end and back-end.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: rhc-open-innovation-labs@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function (root, factory) {
  if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(
      require('../ApiClient'),
      require('./InfrastructurePipeline')
    );
  }
  else {
    // Browser globals (root is window)
    if (!root.RedHatOpenInnovationLabsConsoleApi) {
      root.RedHatOpenInnovationLabsConsoleApi = {};
    }
    root.RedHatOpenInnovationLabsConsoleApi.Build = factory(
      root.RedHatOpenInnovationLabsConsoleApi.ApiClient,
      root.RedHatOpenInnovationLabsConsoleApi.InfrastructurePipeline
    );
  }
}(this, (ApiClient, InfrastructurePipeline) => {
  /**
   * The Build model module.
   * @module model/Build
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>Build</code>.
   * @alias module:model/Build
   * @class
   */
  const exports = function () {
    const _this = this;
  };

  /**
   * Constructs a <code>Build</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Build} obj Optional instance to populate.
   * @return {module:model/Build} The populated <code>Build</code> instance.
   */
  exports.constructFromObject = function (data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj.id = ApiClient.convertToType(data.id, 'Integer');
      }
      if (data.hasOwnProperty('infrastructurePipeline')) {
        obj.infrastructurePipeline = InfrastructurePipeline.constructFromObject(
          data.infrastructurePipeline
        );
      }
      if (data.hasOwnProperty('infrastructurePipeline_version')) {
        obj.infrastructurePipeline_version = ApiClient.convertToType(
          data.infrastructurePipeline_version,
          'Integer'
        );
      }
      if (data.hasOwnProperty('infrastructurePipeline_version_key')) {
        obj.infrastructurePipeline_version_key = ApiClient.convertToType(
          data.infrastructurePipeline_version_key,
          'Integer'
        );
      }
      if (data.hasOwnProperty('number_of_projects')) {
        obj.number_of_projects = ApiClient.convertToType(
          data.number_of_projects,
          'Integer'
        );
      }
      if (data.hasOwnProperty('number_of_stages')) {
        obj.number_of_stages = ApiClient.convertToType(
          data.number_of_stages,
          'Integer'
        );
      }
      if (data.hasOwnProperty('datetime_started')) {
        obj.datetime_started = ApiClient.convertToType(
          data.datetime_started,
          'String'
        );
      }
      if (data.hasOwnProperty('datetime_completed')) {
        obj.datetime_completed = ApiClient.convertToType(
          data.datetime_completed,
          'String'
        );
      }
      if (data.hasOwnProperty('status')) {
        obj.status = ApiClient.convertToType(data.status, 'String');
      }
      if (data.hasOwnProperty('running_jobs')) {
        obj.running_jobs = ApiClient.convertToType(data.running_jobs, [Object]);
      }
      if (data.hasOwnProperty('project_jobs')) {
        obj.project_jobs = ApiClient.convertToType(data.project_jobs, Object);
      }
      if (data.hasOwnProperty('ansible_tower_url')) {
        obj.ansible_tower_url = ApiClient.convertToType(data.ansible_tower_url, 'String');
      }
    }
    return obj;
  };

  /**
   * @member {Integer} id
   */
  exports.prototype.id = undefined;
  /**
   * @member {module:model/InfrastructurePipeline} infrastructurePipeline
   */
  exports.prototype.infrastructurePipeline = undefined;
  /**
   * @member {Integer} infrastructurePipeline_version
   */
  exports.prototype.infrastructurePipeline_version = undefined;
  /**
   * @member {Integer} infrastructurePipeline_version_key
   */
  exports.prototype.infrastructurePipeline_version_key = undefined;
  /**
   * @member {Integer} number_of_projects
   */
  exports.prototype.number_of_projects = undefined;
  /**
   * @member {Integer} number_of_stages
   */
  exports.prototype.number_of_stages = undefined;
  /**
   * @member {Date} datetime_started
   */
  exports.prototype.datetime_started = undefined;
  /**
   * @member {Date} datetime_completed
   */
  exports.prototype.datetime_completed = undefined;
  /**
   * @member {String} status
   */
  exports.prototype.status = undefined;
  /**
   * @member [Object]
   */
  exports.prototype.running_jobs = undefined;
  /**
   * @member Object
   */
  exports.prototype.project_jobs = undefined;
  /**
   * @member {String} ansible_tower_url
   */
  exports.prototype.ansible_tower_url = undefined;

  return exports;
}));
